[abs]
description = 'Returns the absolute value of `x`.'

[acos]
description = 'Returns the arc cosine of `x` (in radians).'

[asin]
description = 'Returns the arc sine of `x` (in radians).'

["atan Lua 5.1"]
description = 'Returns the arc tangent of `x` (in radians).'

["atan Lua 5.3"]
description = 'Returns the arc tangent of `y/x` (in radians).'

[atan2]
description = 'Returns the arc tangent of `y/x` (in radians).'

[ceil]
description = 'Returns the smallest integral value larger than or equal to `x`.'

[cos]
description = 'Returns the cosine of `x` (assumed to be in radians).'

[cosh]
description = 'Returns the hyperbolic cosine of `x` (assumed to be in radians).'

[deg]
description = 'Converts the angle `x` from radians to degrees.'

[exp]
description = 'Returns the value `e^x` (where `e` is the base of natural logarithms).'

[floor]
description = 'Returns the largest integral value smaller than or equal to `x`.'

[fmod]
description = 'Returns the remainder of the division of `x` by `y` that rounds the quotient towards zero.'

[frexp]
description = 'Decompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).'

[huge]
description = 'A value larger than any other numeric value.'

[log]
description = 'Returns the logarithm of `x` in the given base.'

['log Lua 5.1']
description = 'Returns the natural logarithm of `x` .'

[log10]
description = 'Returns the base-10 logarithm of x.'

[ldexp]
description = 'Returns `m * (2 ^ e)` .'

[max]
description = 'Returns the argument with the maximum value, according to the Lua operator `<`.'

[maxinteger]
description = 'An integer with the maximum value for an integer.'

[min]
description = 'Returns the argument with the minimum value, according to the Lua operator `<`.'

[mininteger]
description = 'An integer with the minimum value for an integer.'

[modf]
description = 'Returns the integral part of `x` and the fractional part of `x`.'

[pi]
description = 'The value of *Ï€*.'

[pow]
description = 'Returns `x ^ y` .'

[rad]
description = 'Converts the angle `x` from degrees to radians.'

[random]
description = [[
* `math.random()`: Returns a float in the range [0,1).
* `math.random(n)`: Returns a integer in the range [1, n].
* `math.random(m, n)`: Returns a integer in the range [m, n].
]]

[randomseed]
description = 'Sets `x` as the "seed" for the pseudo-random generator.'

["randomseed Lua 5.4"]
description = [[
* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.
* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .
* `math.randomseed()`: Generates a seed with a weak attempt for randomness.
]]

[sin]
description = 'Returns the sine of `x` (assumed to be in radians).'

[sinh]
description = 'Returns the hyperbolic sine of `x` (assumed to be in radians).'

[sqrt]
description = 'Returns the square root of `x`.'

[tan]
description = 'Returns the tangent of `x` (assumed to be in radians).'

[tanh]
description = 'Returns the hyperbolic tangent of `x` (assumed to be in radians).'

[tointeger]
description = 'If the value `x` is convertible to an integer, returns that integer.'

[type]
[[.enums]]
name = 'type'
enum = '"integer"'
description = '`x` is an integer.'
``````````
name = 'type'
enum = '"float"'
description = '`x` is a float.'
``````````
name = 'type'
code = 'nil'
description = '`x` is not a number.'

[ult]
description = 'Returns `true` if and only if `m` is below `n` when they are compared as unsigned integers.'
