---@meta

---Prototype of a modular equipment.
---@class LuaEquipmentPrototype
---@field attack_parameters AttackParameters @The equipment attack parameters or `nil`.`[R]`
---@field automatic boolean @Is this active defense equipment automatic. Returns false if not active defense equipment.`[R]`
---@field background_color Color @The background color of this equipment prototype.`[R]`
---@field burner_prototype LuaBurnerPrototype @The burner energy source prototype this equipment uses or `nil`.`[R]`
---@field electric_energy_source_prototype LuaElectricEnergySourcePrototype @The electric energy source prototype this equipment uses or `nil`.`[R]`
---@field energy_consumption double @`[R]`
---@field energy_per_shield double @The energy per shield point restored. 0 for non-shield equipment.`[R]`
---@field energy_production double @The max power generated by this equipment.`[R]`
---@field energy_source LuaElectricEnergySourcePrototype @The energy source prototype for the equipment.`[R]`
---@field equipment_categories string[] @Category names for this equipment. These [categories](LuaEquipmentGridPrototype::equipment_categories) will be used to determine whether this equipment is allowed in a particular equipment grid.`[R]`
---@field localised_description LocalisedString @`[R]`
---@field localised_name LocalisedString @`[R]`
---The logistic parameters for this roboport equipment.`[R]`
---
---Both the `charging_station_shift` and `stationing_offset` vectors are tables with `x` and `y` keys instead of an array.
---@field logistic_parameters LuaEquipmentPrototype.logistic_parameters
---@field movement_bonus float @`[R]`
---@field name string @Name of this prototype.`[R]`
---@field object_name string @The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.`[R]`
---@field order string @The string used to alphabetically sort these prototypes. It is a simple string that has no additional semantic meaning.`[R]`
---@field shape LuaEquipmentPrototype.shape @Shape of this equipment prototype.`[R]`
---@field shield float @The shield value of this equipment. 0 for non-shield equipment.`[R]`
---@field take_result LuaItemPrototype @The result item when taking this equipment out of an equipment grid. `nil` if there is no result item.`[R]`
---@field type string @Type of this equipment prototype.`[R]`
---@field valid boolean @Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.`[R]`
local LuaEquipmentPrototype = {}

---All methods and properties that this object supports.
---@return string
function LuaEquipmentPrototype.help() end


---@class LuaEquipmentPrototype.logistic_parameters
---@field charge_approach_distance float
---@field charging_distance float
---@field charging_energy double
---@field charging_station_count uint
---@field charging_station_shift Vector
---@field charging_threshold_distance float
---@field construction_radius float
---@field logistic_radius float
---@field logistics_connection_distance float
---@field robot_limit uint
---@field robot_vertical_acceleration float
---@field robots_shrink_when_entering_and_exiting boolean
---@field spawn_and_station_height float
---@field spawn_and_station_shadow_height_offset float
---@field stationing_offset Vector

---@class LuaEquipmentPrototype.shape
---@field height uint
---@field points? EquipmentPoint[] @Only set when the shape is "manual"
---@field width uint

