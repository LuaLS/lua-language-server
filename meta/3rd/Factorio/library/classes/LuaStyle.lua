---@meta

---Style of a GUI element. All of the attributes listed here may be `nil` if not available for a particular GUI element.
---@class LuaStyle
---@field badge_font string @`[RW]`
---@field badge_horizontal_spacing int @`[RW]`
---@field bar_width uint @`[RW]`
---@field bottom_cell_padding int @Space between the table cell contents bottom and border.`[RW]`
---@field bottom_margin int @`[RW]`
---@field bottom_padding int @`[RW]`
---@field cell_padding int @Space between the table cell contents and border. Sets top/right/bottom/left cell paddings to this value.`[W]`
---@field clicked_font_color Color @`[RW]`
---@field clicked_vertical_offset int @`[RW]`
---@field color Color @`[RW]`
---Array containing the alignment for every column of this table element. Even though this property is marked as read-only, the alignment can be changed by indexing the LuaCustomTable, like so:`[R]`
---
---```lua
---table_element.style.column_alignments[1] = "center"
---```
---@field column_alignments table<uint, Alignment>
---@field default_badge_font_color Color @`[RW]`
---@field disabled_badge_font_color Color @`[RW]`
---@field disabled_font_color Color @`[RW]`
---@field extra_bottom_margin_when_activated int @`[RW]`
---@field extra_bottom_padding_when_activated int @`[RW]`
---@field extra_left_margin_when_activated int @`[RW]`
---@field extra_left_padding_when_activated int @`[RW]`
---@field extra_margin_when_activated int|int[] @Sets `extra_top/right/bottom/left_margin_when_activated` to this value. An array with two values sets top/bottom margin to the first value and left/right margin to the second value. An array with four values sets top, right, bottom, left margin respectively.`[W]`
---@field extra_padding_when_activated int|int[] @Sets `extra_top/right/bottom/left_padding_when_activated` to this value. An array with two values sets top/bottom padding to the first value and left/right padding to the second value. An array with four values sets top, right, bottom, left padding respectively.`[W]`
---@field extra_right_margin_when_activated int @`[RW]`
---@field extra_right_padding_when_activated int @`[RW]`
---@field extra_top_margin_when_activated int @`[RW]`
---@field extra_top_padding_when_activated int @`[RW]`
---@field font string @`[RW]`
---@field font_color Color @`[RW]`
---@field gui LuaGui @Gui of the [LuaGuiElement](LuaGuiElement) of this style.`[R]`
---@field height int @Sets both minimal and maximal height to the given value.`[W]`
---@field horizontal_align string @Horizontal align of the inner content of the widget, possible values are "left", "center" or "right"`[RW]`
---@field horizontal_spacing int @Horizontal space between individual cells.`[RW]`
---@field horizontally_squashable boolean @If the GUI element can be squashed (by maximal width of some parent element) horizontally. This is mainly meant to be used for scroll-pane The default value is false.`[RW]`
---@field horizontally_stretchable boolean @If the GUI element stretches its size horizontally to other elements.`[RW]`
---@field hovered_font_color Color @`[RW]`
---@field left_cell_padding int @Space between the table cell contents left and border.`[RW]`
---@field left_margin int @`[RW]`
---@field left_padding int @`[RW]`
---@field margin int|int[] @Sets top/right/bottom/left margins to this value. An array with two values sets top/bottom margin to the first value and left/right margin to the second value. An array with four values sets top, right, bottom, left margin respectively.`[W]`
---@field maximal_height int @Maximal height ensures, that the widget will never be bigger than than that size. It can't be stretched to be bigger.`[RW]`
---@field maximal_width int @Maximal width ensures, that the widget will never be bigger than than that size. It can't be stretched to be bigger.`[RW]`
---@field minimal_height int @Minimal height ensures, that the widget will never be smaller than than that size. It can't be squashed to be smaller.`[RW]`
---@field minimal_width int @Minimal width ensures, that the widget will never be smaller than than that size. It can't be squashed to be smaller.`[RW]`
---@field name string @Name of this style.`[R]`
---@field natural_height int @Natural height specifies the height of the element tries to have, but it can still be squashed/stretched to have a smaller or bigger size.`[RW]`
---@field natural_width int @Natural width specifies the width of the element tries to have, but it can still be squashed/stretched to have a smaller or bigger size.`[RW]`
---@field object_name string @The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed with a dotted path to a member of the struct.`[R]`
---@field padding int|int[] @Sets top/right/bottom/left paddings to this value. An array with two values sets top/bottom padding to the first value and left/right padding to the second value. An array with four values sets top, right, bottom, left padding respectively.`[W]`
---@field pie_progress_color Color @`[RW]`
---@field rich_text_setting defines.rich_text_setting @How this GUI element handles rich text.`[RW]`
---@field right_cell_padding int @Space between the table cell contents right and border.`[RW]`
---@field right_margin int @`[RW]`
---@field right_padding int @`[RW]`
---@field selected_badge_font_color Color @`[RW]`
---@field selected_clicked_font_color Color @`[RW]`
---@field selected_font_color Color @`[RW]`
---@field selected_hovered_font_color Color @`[RW]`
---@field single_line boolean @`[RW]`
---@field size int|int[] @Sets both width and height to the given value. Also accepts an array with two values, setting width to the first and height to the second one.`[W]`
---@field stretch_image_to_widget_size boolean @`[RW]`
---@field strikethrough_color Color @`[RW]`
---@field top_cell_padding int @Space between the table cell contents top and border.`[RW]`
---@field top_margin int @`[RW]`
---@field top_padding int @`[RW]`
---@field use_header_filler boolean @`[RW]`
---@field valid boolean @Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any change to the game state might have occurred between the creation of the Lua object and its access.`[R]`
---@field vertical_align string @Vertical align of the inner content of the widget, possible values are "top", "center" or "bottom"`[RW]`
---@field vertical_spacing int @Vertical space between individual cells.`[RW]`
---@field vertically_squashable boolean @If the GUI element can be squashed (by maximal height of some parent element) vertically. This is mainly meant to be used for scroll-pane The default (parent) value for scroll pane is true, false otherwise.`[RW]`
---@field vertically_stretchable boolean @If the GUI element stretches its size vertically to other elements.`[RW]`
---@field width int @Sets both minimal and maximal width to the given value.`[W]`
local LuaStyle = {}

---All methods and properties that this object supports.
---@return string
function LuaStyle.help() end

